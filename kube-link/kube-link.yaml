apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-link
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: kube-link
  template:
    metadata:
      labels:
        app: kube-link
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      priorityClassName: system-node-critical
      serviceAccountName: kube-link
      serviceAccount: kube-link
      containers:
      - name: kube-link
        image: "hub.jdcloud.com/kube-link/kube-link:0.1.0-32a678d"
        imagePullPolicy: IfNotPresent
        command: [ "/usr/bin/kube-link" ]
        args:
          - "--nodeport=true"
          - "--kubeconfig="
          - "--pinpath=/sys/fs/bpf"
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 200m
            memory: 512M
          requests:
            cpu: 200m
            memory: 512M
        volumeMounts:
        - name: kube-link-pinpath
          mountPath: /sys/fs/bpf
      hostNetwork: true
      hostPID: true
      volumes:
      - name: kube-link-pinpath
        hostPath:
          path: /sys/fs/bpf
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-link
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-link
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - services
      - nodes
      - endpoints
    verbs:
      - list
      - get
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-link
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-link
subjects:
  - kind: ServiceAccount
    name: kube-link
    namespace: kube-system


