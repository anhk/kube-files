apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
spec:
  replicas: {{.Values.replicas}}
  selector:
    matchLabels:
      app: etcd
  serviceName: etcd-headless
  template:
    metadata:
      labels:
        app: etcd
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.global.antiAffinity true }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - mysql
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end  }}
      securityContext:
        runAsUser: 0
      containers:
      - name: etcd
        image: {{.Values.image}}
        command: ["sh", "-c", "/start.sh"]
        ports:
          - containerPort: 2379
          - containerPort: 2380
        volumeMounts:
          - name: etcd-data
            mountPath: /etcd-data
          - name: etcd-scripts
            mountPath: /start.sh
            subPath: start.sh
      volumes:
      - name: etcd-scripts
        configMap:
         name: etcd-scripts
         items:
           - key: start.sh
             path: start.sh
             mode: 0755
  volumeClaimTemplates:
    - metadata:
        name: etcd-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{.Values.storageSize}}
      {{- with .Values.storageClassName }}
        storageClassName: {{.}}
      {{- end }}
