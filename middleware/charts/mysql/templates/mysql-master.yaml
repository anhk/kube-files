apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-master
spec:
  selector:
    matchLabels:
      app: mysql
      role: master
  serviceName: mysql-headless
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
        role: master
    spec:
      initContainers:
      - name: init-mysql
        image: mysql:5.7
        command: ["bash", "-c", "/init.sh"]
        volumeMounts:
        - name: conf
          mountPath: /mnt/conf.d
        - name: mysql-config
          mountPath: /mnt/config-map
        - name: mysql-scripts
          mountPath: /init.sh
          subPath: init.sh
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "1"
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
      - name: xtrabackup
        image: gcr.io/google-samples/xtrabackup:1.0
        ports:
        - name: xtrabackup
          containerPort: 3307
        command: ["bash", "-c", "/backup.sh"]
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: mysql-scripts
          mountPath: /backup.sh
          subPath: backup.sh
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: conf
        emptyDir: {}
      - name: mysql-config
        configMap:
          name: mysql-config
      - name: mysql-scripts
        configMap:
          name: mysql-scripts
          items:
            - key: init.sh
              path: init.sh
              mode: 0755
            - key: backup.sh
              path: backup.sh
              mode: 0755
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{.Values.global.storageSize}}
      storageClassName: {{.Values.global.storageClassName}}
