apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
spec:
  selector:
    matchLabels:
      app: redis
      role: master
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
    {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if eq .Values.global.antiAffinity true }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - redis
            topologyKey: "kubernetes.io/hostname"
    {{- end }}
    {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end  }}
      containers:
      - name: redis
        image: {{.Values.image}}
        imagePullPolicy: IfNotPresent
        command: ["redis-server", "--appendonly", "yes",  "--requirepass", "{{.Values.password}}"]
        volumeMounts:
        - name: data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{.Values.global.storageSize}}
      {{- with .Values.global.storageClassName }}
      storageClassName: {{.}}
      {{- end }}
