apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-cm-anhk
data:
  nginx.conf: |
    #user nobody;
    worker_processes auto;
    worker_rlimit_nofile 131072;

    events {
        use epoll;
        multi_accept on;
        accept_mutex off;
        worker_connections 131072;
    }

    error_log off;

    pid /var/run/nginx.pid;

    http {
       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log off;

        tcp_nodelay on;
        tcp_nopush on;

        server {
            listen 80;

            location /http {
                return 200 'test';
            }

            location /http-nat {
                proxy_connect_timeout 5s;
                proxy_http_version 1.1;
                proxy_set_header Connection close;
                proxy_pass http://192.168.0.89/http-nat;
            }
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-anhk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-anhk
  template:
    metadata:
      labels:
        app: nginx-anhk
    spec:
      containers:
      - image: hub.jdcloud.com/baseimages/nginx:v20220401
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          hostPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: config-volume
          subPath: nginx.conf
        resources:
          limits:
            cpu: "16"
            memory: 32Gi
          requests:
            cpu: "2"
            memory: 4Gi
      #nodeName: k8s-node01
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          name: nginx-cm-anhk
        name: config-volume
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx-anhk
  type: NodePort
