apiVersion: v1
kind: Namespace
metadata:
  name: storage

---
apiVersion: v1
kind: Service
metadata:
  name: nfs-service
  namespace: storage
spec:
  ports:
  - name: nfs
    port: 2049
  - name: mountd
    port: 20048
  - name: rpcbind
    port: 111
  selector:
    app: nfs-server # must match with the label of NFS pod
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nfs-server-exports
  namespace: storage
data:
  exports: |
    /exports *(rw,sync,no_root_squash,insecure,no_subtree_check,no_all_squash)

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: storage
spec:
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      hostNetwork: true
      containers:
      - name: nfs-server
        image: ir0cn/nfs-server
        ports:
        - name: nfs
          containerPort: 2049
        - name: mountd
          containerPort: 20048
        - name: rpcbind
          containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
        - name: storage
          mountPath: /exports
        - name: exports
          mountPath: /etc/exports.d/
      volumes:
      - name: exports
        configMap:
          name: nfs-server-exports
      - name: storage
        hostPath:
          path: /data/nfs-server # store all data in "/data/nfs" directory of the node where it is running
          type: DirectoryOrCreate # if the directory does not exist then create it
